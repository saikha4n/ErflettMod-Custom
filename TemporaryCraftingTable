package net.mcreator.erflettmod.block;

import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraft.world.entity.player.Player;
import net.minecraft.world.InteractionResult;
import net.minecraft.core.BlockPos;
import net.minecraft.world.level.Level;
import net.minecraft.world.phys.BlockHitResult;
import net.minecraft.server.level.ServerPlayer;
import net.minecraft.world.SimpleMenuProvider;
import net.minecraft.world.inventory.CraftingMenu;
import net.minecraft.world.inventory.ContainerLevelAccess;
import net.minecraft.network.chat.Component;
import net.minecraft.stats.Stats;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TemporaryCraftingTableBlock extends Block {
    private static final Logger LOGGER = LoggerFactory.getLogger("Erflettmod");

    public TemporaryCraftingTableBlock(Properties properties) {
        super(properties);
    }

    @Override
    public InteractionResult useWithoutItem(BlockState state, Level level, BlockPos pos, Player player, BlockHitResult hit) {
        if (level.isClientSide) {
            return InteractionResult.SUCCESS;
        }

        if (player instanceof ServerPlayer serverPlayer) {
            LOGGER.info("Opening crafting menu for player: " + player.getName().getString());
            
            player.awardStat(Stats.INTERACT_WITH_CRAFTING_TABLE);
            
            serverPlayer.closeContainer();
            
            level.getServer().execute(() -> {
                if (serverPlayer.isAlive() && !serverPlayer.isRemoved()) {
                    try {
                        serverPlayer.openMenu(new SimpleMenuProvider(
                            (id, inventory, p) -> new CraftingMenu(id, inventory, ContainerLevelAccess.create(level, pos)),
                            Component.literal("Temporary Crafting Table")
                        ));
                        LOGGER.info("Menu opened successfully");
                    } catch (Exception e) {
                        LOGGER.error("Error opening menu: ", e);
                    }
                }
            });
        }

        return InteractionResult.CONSUME;
    }
}
